
// Exporter generated by makeFormForReaders.js
// include..... repository: MnovaJson-reader
// include..... jsLibrary: mnovaJsonReader.js
// work on object:nmrSpectrumObject (object == className)
// Auto-generated supplement file for className:nmrSpectrumObject
nmrSpectrumObject_DataExport(targetObjType, dataObj = {}) {
	const myName = "nmrSpectrumObject_DataExport"; // don't automatize in case 'use strict'
	if (targetObjType == "info") {
		return {
			objSource: "nmrSpectrumObject",
			objectObj: "NMRspectrumObject",
			title: "Mnova json spectrum",
			uniqueHTMLcode: myName,
			elevatorMethod: myName,
			creatorParam: {"editor":"djeanner","version":"1","source":"MnovaJson","id":"none"},
			outputComponents: [
				{
					objDataField: {"passedList":["field1"]},
					type: "json",
					htmlID: "nmrSpectrumObject",
					label: "NMR file (.json)",
					defaultFileName: "output.spectrum",
					show: true,
				},
{
					objDataField: {"passedList":["field2"]},
					type: "txt",
					htmlID: "nmrSpectrumObject",
					label: "title (.txt)",
					defaultFileName: "output.title",
					show: true,
				}
			],
		};
	}


	// here create object from this
	const theNMRspectrumObject = new NMRspectrumObject([], this.obj);
	const param = {
		dataObj : dataObj,
		objDataField: dataObj.item.objDataField,
		creatorParam : dataObj.creatorParam,
		targetObjType: targetObjType,
		object: dataObj.objSource,
		objectObj: dataObj.objectObj,
		};
	const returedExport = theNMRspectrumObject._saveExportedData(param, this.obj);
	return returedExport;
}
